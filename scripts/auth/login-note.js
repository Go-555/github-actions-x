#!/usr/bin/env node

/**
 * note.com „É≠„Ç∞„Ç§„É≥Áî®„Çπ„ÇØ„É™„Éó„Éà
 * „Éñ„É©„Ç¶„Ç∂„ÇíÈñã„ÅÑ„Å¶„É≠„Ç∞„Ç§„É≥Âæå„ÄÅstorageState„Çí‰øùÂ≠ò
 *
 * ‰Ωø„ÅÑÊñπ:
 * 1. npm run login:note „ÇíÂÆüË°å
 * 2. „Éñ„É©„Ç¶„Ç∂„Åßnote.com„Å´„É≠„Ç∞„Ç§„É≥
 * 3. Enter „Ç≠„Éº„ÇíÊäº„Åô„Å® storageState „Åå‰øùÂ≠ò„Åï„Çå„Çã
 */

import { chromium } from 'playwright';
import fs from 'fs/promises';
import path from 'path';
import { fileURLToPath } from 'url';
import readline from 'readline';

const __dirname = path.dirname(fileURLToPath(import.meta.url));
const STATE_FILE = path.join(__dirname, '../../.note-state.json');

async function main() {
  console.log('üîê note.com „É≠„Ç∞„Ç§„É≥„ÇíÈñãÂßã„Åó„Åæ„Åô...');
  console.log('');

  const browser = await chromium.launch({
    headless: false, // „Éñ„É©„Ç¶„Ç∂„ÇíË°®Á§∫
  });

  const context = await browser.newContext();
  const page = await context.newPage();

  // note.com „É≠„Ç∞„Ç§„É≥„Éö„Éº„Ç∏„ÇíÈñã„Åè
  await page.goto('https://note.com/login');

  console.log('„Éñ„É©„Ç¶„Ç∂„ÅåÈñã„Åç„Åæ„Åó„Åü„ÄÇ');
  console.log('note.com„Å´„É≠„Ç∞„Ç§„É≥„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ');
  console.log('');
  console.log('„É≠„Ç∞„Ç§„É≥ÂÆå‰∫ÜÂæå„ÄÅ„Åì„ÅÆ„Çø„Éº„Éü„Éä„É´„Åß Enter „Ç≠„Éº„ÇíÊäº„Åó„Å¶„Åè„Å†„Åï„ÅÑ...');

  // „É¶„Éº„Ç∂„Éº„ÅÆÂÖ•Âäõ„ÇíÂæÖ„Å§
  await new Promise(resolve => {
    const rl = readline.createInterface({
      input: process.stdin,
      output: process.stdout,
    });

    rl.on('line', () => {
      rl.close();
      resolve();
    });
  });

  // storageState„Çí‰øùÂ≠ò
  const storageState = await context.storageState();
  await fs.writeFile(STATE_FILE, JSON.stringify(storageState, null, 2));

  console.log('');
  console.log('‚úÖ „É≠„Ç∞„Ç§„É≥Áä∂ÊÖã„Çí‰øùÂ≠ò„Åó„Åæ„Åó„Åü!');
  console.log(`‰øùÂ≠òÂÖà: ${STATE_FILE}`);
  console.log('');
  console.log('üìù Ê¨°„ÅÆ„Çπ„ÉÜ„ÉÉ„Éó:');
  console.log('1. .note-state.json „ÅÆÂÜÖÂÆπ„Çí„Ç≥„Éî„Éº');
  console.log('2. GitHub Secrets „Å´ NOTE_STORAGE_STATE_JSON „Å®„Åó„Å¶ÁôªÈå≤');
  console.log('   („Éï„Ç°„Ç§„É´ÂÖ®‰Ωì„ÇíJSONÊñáÂ≠óÂàó„Å®„Åó„Å¶ÁôªÈå≤)');
  console.log('');

  await browser.close();
}

main().catch(error => {
  console.error('‚ùå „Ç®„É©„Éº:', error);
  process.exit(1);
});
